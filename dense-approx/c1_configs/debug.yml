# GPT-2 pretraining setup
{
  # See README for MoE config docs!

  # Have 4 experts per layer (every 2 layers by default)
  "moe_router_type": "dense_approx_efficient",
  "moe_num_experts": 16,
  "moe_top_k": 1,
  # "moe_expert_parallel_size": 8,
  "moe_expert_interval": 1,
  "intermediate_size": 2816,
  "moe_aux_loss_coeff" : 0.01,
  "moe_z_loss_coeff": 0.001,
  "moe_jitter_eps": 0.1,
  "mlp_type" : "llama",

  # parallelism settings
  # "enable_expert_tensor_parallelism": true,
  "pipe_parallel_size": 0, # not yet supported for MoE
  "model_parallel_size": 1,
  # "load": "//vox781/exps/gpt-neox/GPT_experts-16-topk-1-layers24-heads-16/uat-125m-moe-16-topk1-llama-denseapprox-master-0_1722971940.1087053/checkpoints",

  #moe settings 
  # "moe_min_capacity": 4,
  # "moe_train_capacity_factor": 1.0, # Setting to 1.0    
  # "moe_eval_capacity_factor": 1.0, # Setting to 1.0

  # batch / data settings
  "gradient_accumulation_steps": 1,
  "train_micro_batch_size_per_gpu": 8,
  "data_impl": "mmap",

  # model settings
  "num_layers": 24,
  "hidden_size": 1024,
  "num_attention_heads": 16,
  "seq_length": 2048,
  "max_position_embeddings": 2048,
  "norm": "layernorm",
  "pos_emb": "rotary",
  "no_weight_tying": true,
  "gpt_j_residual": false,
  "output_layer_parallelism": "column",

  "attention_config": [[["flash"], 24]],

   # these should provide some speedup but takes a while to build, set to true if desired
   "scaled_upper_triang_masked_softmax_fusion": false,
   "bias_gelu_fusion": false, # not compatible with the new MoE impl
   "rope_fusion": false,

   # init methods
   "init_method": "small_init",
   "output_layer_init_method": "wang_init",


   # optimizer settings
   "optimizer": {
     "type": "Adam",
     "params": {
       "lr": 6.0e-4,
       "betas": [0.9, 0.95],
       "eps": 1.0e-8,
     }
   },
   "min_lr": 6.0e-5,
  #  "constant_lr": 1.65e-4, 
  #  "constant_iters_perc": 0.10,
  #  "cooldown_iters_perc": 0.7,
  #  "timescale": 1.0,
   "lr_decay_style": "cosine",
   "warmup": 0.01,

   # for all zero_optimization options, see https://www.deepspeed.ai/docs/config-json/#zero-optimizations-for-fp16-training
   "zero_optimization": {
    "stage": 1,
    "allgather_partitions": True,
    "allgather_bucket_size": 500000000,
    "overlap_comm": True,
    "reduce_scatter": True,
    "reduce_bucket_size": 500000000,
    "contiguous_gradients": True,
  },

   # activation checkpointing
   "checkpoint_activations": true,
   "checkpoint_num_layers": 1,
   "partition_activations": true,
   "synchronize_each_layer": true,

   # regularization
   "gradient_clipping": 1.0,
   "weight_decay": 0.1,
   "hidden_dropout": 0.0,
   "attention_dropout": 0.0,

   # precision settings
  #  "fp16": {
  #    "enabled": true,
  #    "loss_scale": 0,
  #    "loss_scale_window": 1000,
  #    "hysteresis": 2,
  #    "min_loss_scale": 1
  #  },
    "precision": "bfloat16",
    "fp32_allreduce": true,
    "bf16": {
      "enabled": true
    },
    "data_types": {
      "grad_accum_dtype": "bf16"
    },


   # misc. training settings
   "train_iters": 11000,
   "lr_decay_iters": 11000,
   "distributed_backend": "nccl",
   "checkpoint_factor": 5000,
   "eval_interval": 1000,
   "eval_iters": 10,

   # logging
   "log_interval": 10,
   "steps_per_print": 10,
   "keep_last_n_checkpoints": 4,
   "wall_clock_breakdown": true,

  "no_ssh_check": true,
  #  networking
  # "hostfile": "//uls607/gpt_neox_install/hostfiles/hosts_node"

  "train-data-paths": [
    "//s_/data/red_pajama_v1_tokenized_llama2/arxive/arxive.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/books/book_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/c4/c4.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc1930/cc1930.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2005/cc2005.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2104/cc2104.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2205/cc2205.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2306/cc2306.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/stackexchange/stackexchange_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/git/git.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/wiki/wiki_text_document",
  ],
  "train-data-weights":[
      0.134 , #0.134, 0.134, 0.134, 0.134, 0.15, 0.045, 0.045, 0.045, 0.025, 0.02
  ],
  "test-data-paths": [
    "//s_/data/red_pajama_v1_tokenized_llama2/arxive/arxive.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/books/book_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/c4/c4.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc1930/cc1930.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2005/cc2005.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2104/cc2104.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2205/cc2205.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2306/cc2306.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/stackexchange/stackexchange_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/git/git.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/wiki/wiki_text_document",
  ],
  "test-data-weights":[
      0.134 , #0.134, 0.134, 0.134, 0.134, 0.15, 0.045, 0.045, 0.045, 0.025, 0.02
  ],
  "valid-data-paths": [
    "//s_/data/red_pajama_v1_tokenized_llama2/arxive/arxive.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/books/book_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/c4/c4.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc1930/cc1930.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2005/cc2005.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2104/cc2104.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2205/cc2205.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/cc2306/cc2306.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/stackexchange/stackexchange_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/git/git.all_tokenized_text_document",
    # "//s_/data/red_pajama_v1_tokenized_llama2/wiki/wiki_text_document",
  ],
  "valid-data-weights":[
      0.134 , #0.134, 0.134, 0.134, 0.134, 0.15, 0.045, 0.045, 0.045, 0.025, 0.02
  ],

  # or for weighted datasets:
  # "train-data-paths": ["data/enwik8/enwik8_text_document", "data/enwik8/enwik8_text_document"],
  # "test-data-paths": ["data/enwik8/enwik8_text_document", "data/enwik8/enwik8_text_document"],
  # "valid-data-paths": ["data/enwik8/enwik8_text_document", "data/enwik8/enwik8_text_document"],
  # "train-data-weights": [1., 2.],
  # "test-data-weights": [2., 1.],
  # "valid-data-weights": [0.5, 0.4],

  # If weight_by_num_documents is True, Builds dataset weights from a multinomial distribution over groups of data according to the number of documents in each group.
  # WARNING: setting this to True will override any user provided weights
  # "weight_by_num_documents": false,
  # "weighted_sampler_alpha": 0.3,

  "vocab_file": "//s_//meta-llama_Llama-2-7b-hf/tokenizer.json",
  # "merge_file": "data/gpt2-merges.txt",
  "tokenizer_type": "HFTokenizer",
  "save": "checkpoints",
  "checkpoint_validation_with_forward_pass": False,

  
  "base_dir": "//vox781/exps/gpt-neox",
  "tensorboard_dir": "tensorboard",
  "log_dir": "logs",
  "use_wandb": False,
  "wandb_host": "https://api.wandb.ai",
  "wandb_project": "neox",
  # "launcher":'pdsh'
  "num_workers": 2,

  "launcher": "torchrun",
  # "memory_breakdown": True,
  # "global_num_gpus": 32,
  # "deepspeed_mpi": true







}
